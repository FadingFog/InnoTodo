services:
  db:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    expose:
      - "${POSTGRES_PORT:-5432}"

  zookeeper:
    image: bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - "${ZOOKEEPER_PORT:-2181}"

  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    expose:
      - "${KAFKA_PORT:-9092}"
      - "${KAFKA_PORT:-9093}"
    depends_on:
      - zookeeper

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - backend

networks:
  default:
    name: messaging-net
    driver: bridge

volumes:
  postgres_data: